
class Solution
{
	public:
	//Function to find the shortest distance of all the vertices
    //from the source vertex S.
    vector <int> dijkstra(int V, vector<vector<int>> adj[], int S)
    {
        vector<int> dist(V+1,INT_MAX);
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>>> pq;
        dist[S]=0;
        pq.push({0,S});
        while(!pq.empty())
        {
            int mainn=pq.top().second;
            //int mainnDist=pq.first;
            pq.pop();
            //vector<pair<int,int>>::iterator it;
            for(int i=0;i<adj[mainn].size();i++)
            {
                int curr=adj[mainn][i][0];
                int currDist=adj[mainn][i][1];
                if(dist[mainn]+currDist < dist[curr])
                {
                    dist[curr] = dist[mainn]+currDist;
                    pq.push({dist[curr],curr});
                }
            }
        }
      return dist;    
    }
};
