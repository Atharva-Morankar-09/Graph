
# Kahn's Algorithm for Topological sort using BFS 

class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    queue<int> q;
	    vector<int> inDegree(V,0),ans;
	    
	    for(int i=0;i<V;i++)
	    {
	        for(auto it:adj[i])
	        {
	            inDegree[it]++;
	        }
	    }
	    
	    for(int i=0;i<V;i++)
	    {
	        if(inDegree[i]==0)
	        {
	            q.push(i);
	        }
	    }
	    
	    while(!q.empty())
	    {
	        int curr=q.front();
	        q.pop();
	        ans.push_back(curr);
	        for(auto it:adj[curr])
	        {
	            inDegree[it]--;
	            if(inDegree[it]==0)
	            {
	                q.push(it);
	            }
	        }
	    }
	  return ans;  
	}
};
